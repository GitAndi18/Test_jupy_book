Traceback (most recent call last):
  File "C:\Users\beck\anaconda3\envs\Myst-Nb\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\Users\beck\anaconda3\envs\Myst-Nb\lib\site-packages\nbclient\client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\beck\anaconda3\envs\Myst-Nb\lib\site-packages\nbclient\util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\beck\anaconda3\envs\Myst-Nb\lib\site-packages\nbclient\util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\beck\anaconda3\envs\Myst-Nb\lib\asyncio\base_events.py", line 616, in run_until_complete
    return future.result()
  File "C:\Users\beck\anaconda3\envs\Myst-Nb\lib\site-packages\nbclient\client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "C:\Users\beck\anaconda3\envs\Myst-Nb\lib\site-packages\nbclient\client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "C:\Users\beck\anaconda3\envs\Myst-Nb\lib\site-packages\nbclient\client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import scipy.signal
import matplotlib.pyplot as plt

#
#let the signal be box - like
signal = np.repeat([0., 1., 0.], 100) + 0.1*(np.random.random(300) - 0.5)
# and use a gaussian filter
# the filter should be shorter than the signal
# the filter should be such that it 's much bigger then zero everywhere
gauss = np.exp(-((np.linspace(0, 30) - 15.) / float(10)) ** 2)
print (gauss.min()) # = 0.013 >> 0

# calculate the convolution(np.convolve and scipy.signal.convolve identical)
# the keywordargument mode = "same"
#ensures that the convolution spans the same
# shape as the input array.
#filtered = scipy.signal.convolve(signal, gauss, mode = 'same')
filtered = np.convolve(signal, gauss, mode = 'same')

deconv, _ = scipy.signal.deconvolve(filtered, gauss)
#the deconvolution has n = len(signal) - len(gauss) + 1 points
n = len(signal) - len(gauss) + 1
# so we need to expand it by
s = int((len(signal) - n) / 2)
#on both sides.
deconv_res = np.zeros(len(signal))
deconv_res[s: len(signal) - s - 1] = deconv
deconv = deconv_res
# now deconv contains the deconvolution
# expanded to the original shape(filled with zeros)

# # # # Plot # # # #
fig, ax = plt.subplots(nrows = 4, figsize = (6, 7))

ax[0].plot(signal, color = "#907700", label = "original", lw = 3)
ax[1].plot(gauss, color = "#68934e", label = "gauss filter", lw = 3)
# we need to divide by the sum of the filter window to get the convolution normalized to 1
ax[2].plot(filtered  / np.sum(gauss), color = "#325cab", label = "convoluted", lw = 3)  #  / np.sum(gauss)
ax[3].plot(deconv, color = "#ab4232", label = "deconvoluted", lw = 3)

for i in range(len(ax)):
    ax[i].set_xlim([0, len(signal)])
ax[i].set_ylim([-0.07, 1.2])
ax[i].legend(loc = 1, fontsize = 11)
if i != len(ax) - 1:
    ax[i].set_xticklabels([])

#plt.savefig(__file__ + ".png")
plt.show()
------------------

[1;31m-------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                     Traceback (most recent call last)
[1;32m~\AppData\Local\Temp/ipykernel_30556/1844880508.py[0m in [0;36m<module>[1;34m[0m
[0;32m      1[0m [1;32mimport[0m [0mnumpy[0m [1;32mas[0m [0mnp[0m[1;33m[0m[1;33m[0m[0m
[1;32m----> 2[1;33m [1;32mimport[0m [0mscipy[0m[1;33m.[0m[0msignal[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m      3[0m [1;32mimport[0m [0mmatplotlib[0m[1;33m.[0m[0mpyplot[0m [1;32mas[0m [0mplt[0m[1;33m[0m[1;33m[0m[0m
[0;32m      4[0m [1;33m[0m[0m
[0;32m      5[0m [1;31m#[0m[1;33m[0m[1;33m[0m[1;33m[0m[0m

[1;31mModuleNotFoundError[0m: No module named 'scipy'
ModuleNotFoundError: No module named 'scipy'

